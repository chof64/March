version: "3.9"
services:
  traefik:
    image: traefik:v2.9
    command:
      #! ENTRYPOINT
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443

      #! PROVIDERS
      - --providers.docker
      - --providers.docker.exposedbydefault=false

      #! SSL/TLS Let's Encrypt
      #? [prod-ssl] Production CA.
      - --certificatesresolvers.prod-ssl.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.prod-ssl.acme.storage=/traefik/acme.json
      - --certificatesresolvers.prod-ssl.acme.tlschallenge=true
      - --certificatesresolvers.prod-ssl.acme.email=${SSL_EMAIL?SSL_EMAIL not set}
      #? [dev-ssl] Staging CA.
      - --certificatesresolvers.dev-ssl.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.dev-ssl.acme.storage=/traefik/acme.json
      - --certificatesresolvers.dev-ssl.acme.tlschallenge=true
      - --certificatesresolvers.dev-ssl.acme.email=${SSL_EMAIL?SSL_EMAIL not set}

      #! LOGGING
      #? Access logs.
      - --accesslog=true
      - --accesslog.bufferingsize=100
      - --accesslog.filepath=/traefik/access.log
      - --accesslog.format=json
      #? Error logs.
      - --log=true
      - --log.level=DEBUG
      - --log.filepath=/traefik/error.log
      - --log.format=json

      #! DASHBOARD
      - --api
      - --api.dashboard=true
      - --api.insecure=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data:/traefik
    labels:
      #! NETWORK
      traefik.enable: true
      traefik.docker.network: traefik_default

      #! ROUTER: [dashboard] 8080: Traefik API/Dashboard
      traefik.http.services.dashboard.loadbalancer.server.port: 8080
      #? HTTP
      traefik.http.routers.dashboard-http.entrypoints: http
      traefik.http.routers.dashboard-http.rule: Host(`${TRAEFIK_8080_DOMAIN?TRAEFIK_8080_DOMAIN not set}`)
      #? HTTPS
      traefik.http.routers.dashboard-https.entrypoints: https
      traefik.http.routers.dashboard-https.rule: Host(`${TRAEFIK_8080_DOMAIN?TRAEFIK_8080_DOMAIN not set}`)
      #? SSL/TSL
      traefik.http.routers.dashboard-https.tls: true
      traefik.http.routers.dashboard-https.tls.certresolver: ${TRAEFIK_8080_SSL?TRAEFIK_8080_SSL not set}

      #! MIDDLEWARE
      #? [dashboard] Redirect HTTP to HTTPS.
      traefik.http.routers.dashboard-http.middlewares: redirect-to-https
      traefik.http.middlewares.https-redirect.redirectscheme.scheme: https
      traefik.http.middlewares.https-redirect.redirectscheme.permanent: true

      #! EXTRAS
      #? Use the special Traefik service api@internal for the UI/Dashboard
      traefik.http.routers.dashboard-https.service: api@internal
    ports:
      - "80:80"
      - "443:443"

  whoami:
    image: traefik/whoami
    labels: # auto-detects port 8000 in next line
      #! NETWORK
      traefik.enable: true
      traefik.docker.network: traefik_default

      #! ROUTER
      traefik.http.services.whoami.loadbalancer.server.port: 80
      traefik.http.routers.whoami.rule: Host(`${WHOAMI_DOMAIN?WHOAMI_DOMAIN not set}`)
